{"version":3,"sources":["stores/UserStore.js","InputField.js","SubmitButton.js","LoginForm.js","SignupForm.js","App.js","index.js"],"names":["extendObservable","this","loading","isLoggedIn","username","InputField","className","type","props","placeholder","value","onChange","e","target","React","Component","SubmitButton","disabled","onClick","text","LoginForm","state","password","buttonDisabled","property","val","trim","length","setState","fetch","method","headers","Accept","body","JSON","stringify","res","json","result","success","UserStore","resetForm","alert","msg","console","log","style","textAlign","to","setInputValue","doLogin","renderSignup","SignupForm","passwordConfirm","doSignup","App","doLogout","path","exact","component","observer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ee6b5b9.chunk.js","sourcesContent":["import {extendObservable} from 'mobx'; \n\nclass UserStore{\n\n  constructor(){\n\n    extendObservable(this,{\nloading: true,\nisLoggedIn:false,\nusername: ''\n\n\n    })\n  }\n}\n\nexport default new UserStore();","import React from \"react\";\n\nclass InputField extends React.Component {\n  render() {\n    return (\n      <div className=\"inputField\">\n        <input\n          className=\"input\"\n          type={this.props.type}\n          placeholder={this.props.placeholder}\n          value={this.props.value}\n          onChange={(e) => this.props.onChange(e.target.value)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default InputField;\n","import React from \"react\";\n\nclass SubmitButton extends React.Component {\n  render() {\n    return (\n      <div className=\"submitButton\">\n        <button\n          className=\"btn\"\n          disabled={this.props.disabled}\n          onClick={() => this.props.onClick()}\n        >\n          {this.props.text}\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default SubmitButton;\n","import React from \"react\";\nimport InputField from \"./InputField\";\nimport SubmitButton from \"./SubmitButton\";\nimport UserStore from \"./stores/UserStore\";\nimport { Link } from \"react-router-dom\";\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      buttonDisabled: false,\n    };\n  }\n\n  setInputValue(property, val) {\n    val = val.trim();\n    if (val.length > 12) {\n      return;\n    }\n    this.setState({\n      [property]: val,\n    });\n  }\n\n  resetForm() {\n    this.setState({\n      username: \"\",\n      password: \"\",\n      buttonDisabled: false,\n    });\n  }\n\n  async doLogin() {\n    if (!this.state.username) {\n      return;\n    }\n    if (!this.state.password) {\n      return;\n    }\n    this.setState({\n      buttonDisabled: true,\n    });\n\n    try {\n      let res = await fetch(\"/login\", {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n\n        body: JSON.stringify({\n          username: this.state.username,\n          password: this.state.password,\n        }),\n      });\n      let result = await res.json();\n      if (result && result.success) {\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      } else if (result && result.success === false) {\n        this.resetForm();\n        alert(result.msg);\n      }\n    } catch (e) {\n      console.log(e);\n      this.resetForm();\n    }\n  }\n\n  renderSignup() {\n    return (\n      <div style={{ textAlign: \"right\" }}>\n        <Link to=\"/signup\" className=\"link\">\n          Signup\n        </Link>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"loginForm\">\n        Log in\n        <InputField\n          type=\"text\"\n          placeholder=\"Username\"\n          value={this.state.username ? this.state.username : \"\"}\n          onChange={(val) => this.setInputValue(\"username\", val)}\n        />\n        <InputField\n          type=\"text\"\n          placeholder=\"Password\"\n          value={this.state.password ? this.state.password : \"\"}\n          onChange={(val) => this.setInputValue(\"password\", val)}\n        />\n        <SubmitButton\n          text=\"Login\"\n          disabled={this.state.buttonDisabled}\n          onClick={() => this.doLogin()}\n        />\n        {this.renderSignup()}\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import React from \"react\";\nimport InputField from \"./InputField\";\nimport SubmitButton from \"./SubmitButton\";\nimport UserStore from \"./stores/UserStore\";\nimport axios from \"axios\";\n\nclass SignupForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      passwordConfirm: \"\",\n      buttonDisabled: false,\n    };\n  }\n\n  setInputValue(property, val) {\n    val = val.trim();\n    if (val.length > 12) {\n      return;\n    }\n    this.setState({\n      [property]: val,\n    });\n  }\n\n  resetForm() {\n    this.setState({\n      username: \"\",\n      password: \"\",\n      buttonDisabled: false,\n    });\n  }\n\n  async doSignup() {\n    if (!this.state.username) {\n      return;\n    }\n    if (!this.state.password) {\n      return;\n    }\n    if (!this.state.passwordConfirm) {\n      return;\n    }\n    this.setState({\n      buttonDisabled: true,\n    });\n\n    try {\n      let url = \"/signup\";\n      let res = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          username: this.state.username,\n          password: this.state.password,\n          passwordConfirm: this.state.passwordConfirm,\n        }),\n      });\n\n      let result = await res.json();\n      if (result && result.success) {\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      } else if (result && result.success === false) {\n        this.resetForm();\n        alert(result.msg);\n      }\n    } catch (e) {\n      console.log(e);\n      this.resetForm();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"loginForm\">\n        Signup\n        <InputField\n          type=\"text\"\n          placeholder=\"Username\"\n          value={this.state.username ? this.state.username : \"\"}\n          onChange={(val) => this.setInputValue(\"username\", val)}\n        />\n        <InputField\n          type=\"text\"\n          placeholder=\"Password\"\n          value={this.state.password ? this.state.password : \"\"}\n          onChange={(val) => this.setInputValue(\"password\", val)}\n        />\n        <InputField\n          type=\"text\"\n          placeholder=\"Confirm Password\"\n          value={this.state.passwordConfirm ? this.state.passwordConfirm : \"\"}\n          onChange={(val) => this.setInputValue(\"passwordConfirm\", val)}\n        />\n        <SubmitButton\n          text=\"Signup\"\n          disabled={this.state.buttonDisabled}\n          onClick={() => this.doSignup()}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SignupForm;\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport UserStore from \"./stores/UserStore\";\nimport LoginForm from \"./LoginForm\";\nimport SubmitButton from \"./SubmitButton\";\nimport SignupForm from \"./SignupForm\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nclass App extends React.Component {\n  async componentDidMount() {\n    try {\n      let res = await fetch(\"/isLoggedIn\", {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      let result = await res.json();\n      if (result && result.success) {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      } else {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n      }\n    } catch (err) {\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n    }\n  }\n\n  async doLogout() {\n    try {\n      let res = await fetch(\"/logout\", {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      let result = await res.json();\n      if (result && result.success) {\n        UserStore.isLoggedIn = false;\n        UserStore.username = \"\";\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  render() {\n    if (UserStore.loading) {\n      return (\n        <div className=\"app\">\n          <div className=\"container\">Loading, please wait..</div>\n        </div>\n      );\n    } else {\n      if (UserStore.isLoggedIn) {\n        return (\n          <div className=\"app\">\n            <div className=\"container\">\n              Welcome {UserStore.username}\n              <SubmitButton\n                text={\"Log out\"}\n                disabled={false}\n                onClick={() => this.doLogout()}\n              />\n            </div>\n          </div>\n        );\n      }\n      return (\n        <div className=\"app\">\n          <div className=\"container\">\n            <Router>\n              <Switch>\n                <Route path=\"/\" exact component={LoginForm} />\n                <Route path=\"/signup\" exact component={SignupForm} />\n              </Switch>\n            </Router>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default observer(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}